name: "deploy-ps-modules-to-azure-storage"

description: "Deploys versioned zip files of PowerShell script modules within a git repo into Azure storage."

inputs:
  storage-account-name:
    description: "Azure storage account name"
    required: true
  storage-account-container-name:
    description: "Azure storage account container name"
    required: true
  tenant-id:
    description: "Azure tenant id"
    required: true
  overwrite:
    description: "An option to force files to be overwritten when they already exist in Azure storage"
    required: false
    default: "false"
  repo-powershell-module-path:
    description: "Path within your git repo containing the powershell module folder or folders"
    required: true
    default: "./"

runs:
  using: "composite"
  steps:
    - name: Create temp directory for script output
      id: create-temp-output-path
      run: |
        # Configure temp output path for zip files and logs
        $now = Get-Date
        $dateTimeString = $now.ToString("yyyy-MM-dd-HH-mm-ss-fff")
        $tempFolderName = "deploy-ps-modules-to-azure_$($dateTimeString)"
        $tempBasePath = [System.IO.Path]::GetTempPath()
        $uniqueTempPath = [System.IO.Path]::Combine($tempBasePath, $tempFolderName)
        New-Item -Path $uniqueTempPath -type Directory | Out-Null
        Write-Output "outputPath=$uniqueTempPath" >> $env:GITHUB_OUTPUT

      shell: pwsh

    - name: Upload modules to Azure storage
      run: |
        # Execute deploy-ps-modules-to-azure.ps1

        $overwrite = '${{ inputs.overwrite }}'.ToLower().Trim()

        switch ($overwrite) {
            'true'  { $overwrite = $true }
            'false' { $overwrite = $false }
            $null   { $overwrite = $false }
            ''      { $overwrite = $false }
            default {
                throw "The value defined for the overwrite parameter (overwrite=$overwrite) could not be converted to a boolean value. Valid values are 'True', 'true', 'False', 'false'."
            }
        }

        $params = @{
            moduleSourcePath = '${{ inputs.repo-powershell-module-path }}'
            outputPath = '${{ steps.create-temp-output-path.outputs.outputPath }}'
            storageAccountContainerName = '${{ inputs.storage-account-container-name }}'
            storageAccountName = '${{ inputs.storage-account-name }}'
            tenantId = '${{ inputs.tenant-id }}'
            overwrite = $overwrite
        }

        $functions = Get-ChildItem -Path '${{ github.action_path }}/functions' -Recurse -Filter "*.ps1"
        $functions | ForEach-Object {
          . $_.FullName
        }

        $mainFunction = ${{ github.action_path }}/functions/main' -Filter "*.ps1"
        $mainFunctionBaseName = $mainFunction | Select-Object -ExpandProperty BaseName

        & $mainFunctionBaseName @params -InformationAction Continue

      shell: pwsh

    - uses: actions/upload-artifact@v4
      with:
        name: "azcopylog"
        path: ${{ steps.create-temp-output-path.outputs.outputPath }}/logs/*
        retention-days: 14

    - name: Clean up temp folder
      run: |
        # Clean up temp output path
        $outputPath = '${{ steps.create-temp-output-path.outputs.outputPath }}'
        Write-Output "Deleting $outputPath"
        try {
            Remove-Item -Path $outputPath -Recurse -Confirm:$false -Force -ErrorAction Stop
        }
        catch {
            Write-Warning "Unable to remove $outputPath"
        }

      shell: pwsh

branding:
  icon: "arrow-up-circle"
  color: "blue"
